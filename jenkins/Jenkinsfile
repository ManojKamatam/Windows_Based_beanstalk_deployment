pipeline {
    agent any

    environment {
        S3_BUCKET = 'my-s3-bucket-for-jenkins-pipeline-setup'
        S3_KEY = 'my-app.zip'
        ENVIRONMENT_NAME = 'Sample-beanstalk-env-env'
        APPLICATION_NAME = 'Sample-beanstalk-env'
        AWS_REGION = 'us-east-1' // Replace with your actual AWS region
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/ManojKamatam/Beanstalk_Deployemt.git', branch: 'main'
            }
        }
        
        stage('Upload to S3') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: 'aws-credentials-id'
                ]]) {
                    bat "aws s3 cp application.zip s3://${S3_BUCKET}/${S3_KEY}"
                }
            }
        }

        stage('Deploy with Terraform') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: 'aws-credentials-id'
                ]]) {
                    dir('terraform') {
                        bat 'terraform init'
                        bat """
                            aws elasticbeanstalk describe-environments --region \${AWS_REGION} --environment-names \${ENVIRONMENT_NAME} --query 'Environments[0].EnvironmentId' > environment_id.txt
                            terraform import aws_elastic_beanstalk_environment.my_env aws_elastic_beanstalk_environment.my_env/\$(cat environment_id.txt)
                            terraform apply -auto-approve -var s3_bucket=\${S3_BUCKET} -var s3_key=\${S3_KEY} -var environment_name=\${ENVIRONMENT_NAME} -var application_name=\${APPLICATION_NAME} -var application=aws_elastic_beanstalk_application.my_app
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Deployment process completed.'
        }
    }
}
